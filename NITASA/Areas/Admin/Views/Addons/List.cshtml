@model List<Content>
@using NITASA.Data
@using NITASA.Areas.Admin.Helper
@{
    ViewBag.Title = "Addons";
    WebGrid grid = new WebGrid(Model, rowsPerPage: 10, canSort: true);
}
    <style>
        tfoot td {
            line-height: 3 !important;
        }

        .custom-pagination td {
            padding-left: 10px !important;
        }

        .table-normal tbody td.col2 {
            width: 50px;
            text-align: center;
        }

        .table-normal tbody td.col3 {
            width: 115px;
            text-align: center;
        }
    </style>
    <div class="main-content">
        <div class="container-fluid padded">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    <button class="close" data-dismiss="alert" type="button">
                        ×
                    </button>
                    @TempData["SuccessMessage"]
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-error">
                    <button class="close" data-dismiss="alert" type="button">
                        ×
                    </button>
                    @TempData["ErrorMessage"]
                </div>
            }
            <div class="row-fluid">
                <div class="span12">
                    @using (Html.BeginForm("List", "Addons", FormMethod.Get))
                    {
                        <div class="box">
                            <div class="box-header">
                                <span class="title">Search Addon</span>
                                @if (UserRights.HasRights(Rights.CreateNewAddons))
                                {
                                    <ul class="box-toolbar">
                                        <li>
                                            <a href="@Url.Action("Add")" title="New Addon">
                                                <i class="icon-plus-sign" style="margin-top: 10px">
                                                </i>
                                            </a>
                                        </li>
                                    </ul>
                                }
                            </div>
                            <div class="box-content">
                                <div class="padded">
                                    <table class="form-horizontal fill-up validatable width100per">
                                        <tr>
                                            <td class="width10per">Category</td>
                                            <td class="width70per">
                                                @*@Html.DropDownList("cid", (IEnumerable<SelectListItem>)ViewBag.categoryList, "All")*@

                                            </td>
                                            <td class="width20per">
                                                <input type="submit" class="btn btn-blue" value="Search" />
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="box">
                        <div class="box-header">
                            <span class="title">Browse Addons</span>
                        </div>
                        <div class="box-content">
                            @if (Model.Count() > 0)
                            {
                                @grid.GetHtml(tableStyle: "table table-normal", headerStyle: "head", alternatingRowStyle: "alt", firstText: "First", nextText: "Next", previousText: "Prev", lastText: "Last", footerStyle: "custom-pagination",
                                mode: WebGridPagerModes.All,
                                columns: grid.Columns(
                                       grid.Column(columnName: "Title", header: "Addon Title", style: "col1"),
                                       grid.Column(columnName: "Type", header: "Addon Name", style: "col1"),
                                       grid.Column(columnName: "ContentView", header: "Views", style: "col2"),
                                       grid.Column(columnName: "User.FullName", header: "Author", style: "col2"),
                                       grid.Column(columnName: "isPublished", header: "Type", style: "col2",
                                       format: (item) => item.isPublished == true ? "Published" : "Draft"
                                       ),
                                        grid.Column(header: "Action", style: "col3", format: @<text>
                                        @if (Functions.CurrentUserID() == item.AddedBy)
                                        {
                                            if (UserRights.HasRights(Rights.EditOwnAddons))
                                            {
                                                @Html.ActionLink("Edit", "Edit", new { GUID = item.GUID }, new { @class = "btn btn-small btn-blue" })
                                            }
                                        }
                                        else
                                        {
                                            if (UserRights.HasRights(Rights.EditOtherUsersAddons))
                                            {
                                                @Html.ActionLink("Edit", "Edit", new { GUID = item.GUID }, new { @class = "btn btn-small btn-blue" })
                                            }
                                        }
                                        @if (Functions.CurrentUserID() == item.AddedBy)
                                        {
                                            if (UserRights.HasRights(Rights.DeleteOwnAddons))
                                            {
                                                @Html.ActionLink("Delete", "Delete", new { GUID = item.GUID }, new { @class = "btn btn-small btn-red", onclick = "return confirm('Are you sure to delete this Addon ?');" })
                                            }
                                        }
                                        else
                                        {
                                            if (UserRights.HasRights(Rights.DeleteOtherUsersAddons))
                                            {
                                                @Html.ActionLink("Delete", "Delete", new { GUID = item.GUID }, new { @class = "btn btn-small btn-red", onclick = "return confirm('Are you sure to delete this Addon ?');" })
                                            }
                                        }</text>
                                                                                                                                 )
                                                                                                                         )
                                                                                                                     )
                            }
                            else
                            {
                                <div class="padded">
                                    No Addons Found.
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
