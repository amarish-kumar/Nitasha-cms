@model Content
@using NITASA.Data
@using NITASA.Areas.Admin.Helper
@using NITASA.Helpers
@{
    ViewBag.Title = "Update Addon";
    Meta meta = ViewBag.meta;
    //List<AddonType> AddonTypeList = Common.GetAddonTypes();
}
    <script src="@Url.Content("~/Areas/Admin/assets/js/tinymce/tinymce.min.js")"></script>
    <script type="text/javascript">
        function myFileBrowser(field_name, url, type, win) {

            var cmsURL = "/Admin/Post/GetMedia";

            tinyMCE.activeEditor.windowManager.open({
                file: cmsURL,
                title: 'Select an Image',
                width: 750,
                height: 360,
                resizable: "yes",
                inline: "yes",
                close_previous: "no"
            }, {
                window: win,
                input: field_name
            });
            return false;
        }
        $ext = 'span[id|name|class|style]';
        tinyMCE.init({
            selector: "textarea",
            theme: "modern",
            plugins: [
                "advlist autolink lists link image charmap preview hr anchor",
                "searchreplace wordcount visualblocks visualchars code fullscreen",
                "insertdatetime nonbreaking save table contextmenu directionality",
                "emoticons template paste textcolor colorpicker textpattern "
            ],
            toolbar1: "undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | Addons",
            toolbar2: "preview | forecolor backcolor emoticons",
            image_advtab: false,
            extended_valid_elements: $ext,
            force_br_newlines: false,
            force_p_newlines: false,
            forced_root_block: '',
            file_browser_callback: myFileBrowser,
            setup: function (editor) {
                editor.addButton('Addons', {
                    text: 'Addons',
                    type: 'menubutton',
                    icon: false,
                    menu: [
                        @*@foreach(AddonType item in AddonTypeList)
                        {
                        <text>
                            {
                                text: '@item.Name',
                                onclick: function () {
                                    editor.insertContent('&lt;Addon&gt;@item.Code&lt;/Addon&gt;');
                                }
                            },
                        </text>
                        }*@
                    ]
                });
            }
        });
    </script>
}
<div class="main-content">
    <div class="container-fluid padded">
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-error">
                <button class="close" data-dismiss="alert" type="button">
                    ×
                </button>
                @TempData["ErrorMessage"]
            </div>
        }
        <div class="row-fluid">
            <div class="span12">
                <div class="box">
                    <div class="box-header">
                        <span class="title"><i class="icon-book"></i>&nbsp; Update Addon</span>
                    </div>
                    <div class="box-content">
                        <div class="padded">
                            <div class="span12">
                                @using (Html.BeginForm("Edit", "Addons", FormMethod.Post, new { id = "frm1" }))
                                {
                                    <div class="span9">
                                        <div class="control-group">
                                            <div class="controls">
                                                @Html.TextBoxFor(mbox => mbox.Type, new { placeholder = "Addon Name", @class = "width100per", style = "margin-bottom: 0px;", id = "txtAddonName" })
                                                <div style="color: red">
                                                    @Html.ValidationMessageFor(m => m.Type)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="control-group">
                                            <div class="controls">
                                                <input type="hidden" id="UpdateType" name="UpdateType" />
                                                @Html.TextBoxFor(mbox => mbox.Title, new { placeholder = "Addon Title", @class = "width100per", style = "margin-bottom: 0px;" })
                                                <div style="color: red">
                                                    @Html.ValidationMessageFor(m => m.Title)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="control-group">
                                            <div class="controls">
                                                <label>
                                                    <b>Content: </b>
                                                </label>
                                                <div>
                                                    @Html.TextAreaFor(m => m.Description, new { style = "width: 100%; max-width: 98%; height:500px; margin: 0px; overflow: hidden; word-wrap: break-word;resize:vertical;" })
                                                    @*@class = "textarea-html5", *@
                                                    <div style="color: red">
                                                        @Html.ValidationMessageFor(m => m.Description)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span3">
                                        <div class="padded" style="padding-top: 0px; padding-left: 0px;">
                                            @if (Common.CurrentUserID() == Model.AddedBy)
                                            {
                                                if (UserRights.HasRights(Rights.PublishOwnAddons))
                                                {
                                                    <input type="button" class="btn btn-small btn-green" id="btnPost" style="text-align: right"
                                                           value="Publish" />
                                                }
                                            }
                                            else
                                            {
                                                if (UserRights.HasRights(Rights.PublishOtherUsersAddons))
                                                {
                                                    <input type="button" class="btn btn-small btn-green" id="btnPost" style="text-align: right"
                                                           value="Publish" />
                                                }
                                            }&nbsp;
                                            <input type="button" class="btn btn-small btn-blue" style="text-align: right" value="Save to Draft"
                                                   id="btnSaveToDraft" />&nbsp;
                                            <input type="button" class="btn btn-small btn-red" style="text-align: right" value="Back"
                                                   onclick="window.location = '/Admin/Addons/List';" />
                                        </div>
                                        <div class="box">
                                            <div class="box-header">
                                                <span class="title">Display Order</span>
                                            </div>
                                            <div class="box-content">
                                                <div class="padded" style="text-align:left;vertical-align:top">
                                                    @Html.TextBoxFor(mbox => mbox.ContentOrder, new { placeholder = "Content Order To Display", style = "margin-bottom: 0px;" })
                                                    <div style="color: red">
                                                        @Html.ValidationMessageFor(m => m.ContentOrder)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            &nbsp;
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section BottomScript{
    <script type="text/javascript">
        $(document).ready(function () {            
            $('#btnPost').click(function () {
                $("#UpdateType").val("Publish");
                tinyMCE.triggerSave();
                checkCategory();
            });

            $('#btnSaveToDraft').click(function () {
                $("#UpdateType").val("SaveToDraft");
                tinyMCE.triggerSave();
                checkCategory();
            });
            function checkCategory() {
                if ($("#frm1").valid()) {
                    $('#frm1').submit();
                }
            }
        });
        $(function () {
            $("#txtAddonName").autocomplete({
                source: '@Url.Action("GetAddonNames", "Addons")',
                minLength: 1
            });
        });
    </script>
}
