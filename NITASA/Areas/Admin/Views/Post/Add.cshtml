@model Content
@using NITASA.Data
@using NITASA.Areas.Admin.Helper
@{
    ViewBag.Title = "Add Post";
}
@section PageLevelStyles{
    <style type="text/css">
        #slug-container {
            color: #666;
            line-height: 24px;
            margin-top: 5px;
            min-height: 25px;
            padding: 0 10px;
        }

        strong {
            font-weight: 600;
        }

        #slug-container {
            color: #666;
            line-height: 24px;
        }

        .editable-container span {
            background-color: #fffbcc;
        }

        .editable-container input {
            font-size: 13px;
            height: 22px;
            margin: 0;
            width: 16em;
        }

        .slug-buttons .button-small {
            border-color: #ccc;
            border-radius: 3px;
            border-style: solid;
            border-width: 1px;
            color: #555;
            cursor: pointer;
            font-size: 13px;
            line-height: 18px;
            padding: 0 10px 1px;
        }

        .slug-buttons .cancel {
            font-size: 11px;
            margin-right: 10px;
        }
    </style>
    <script src="@Url.Content("~/Areas/Admin/assets/js/tinymce/tinymce.min.js")"></script>
    <script type="text/javascript">
        var popuptype = "cover";
        $ext = 'span[id|name|class|style]';
        tinyMCE.init({
            selector: ".edtr",
            theme: "modern",
            //plugins: [
            //    "advlist autolink lists link image charmap preview hr anchor",
            //    "searchreplace wordcount visualblocks visualchars code fullscreen",
            //    "insertdatetime nonbreaking save table contextmenu directionality",
            //    "emoticons template paste textcolor colorpicker textpattern "
            //],
            //toolbar1: "undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
            //toolbar2: "preview | forecolor backcolor emoticons",
            menubar: false,
            plugins: [
                "advlist autolink lists link image charmap preview hr anchor",
                "searchreplace wordcount visualblocks visualchars code fullscreen",
                "insertdatetime nonbreaking save table contextmenu directionality",
                "emoticons template paste textcolor colorpicker textpattern "
            ],
            toolbar1: "undo redo | styleselect | forecolor backcolor | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link | Variables | mediaimages | code | Addons",
            image_advtab: false,
            extended_valid_elements: $ext,
            force_br_newlines: false,
            force_p_newlines: false,
            forced_root_block: '',
            setup: function (editor) {
                editor.addButton('mediaimages', {
                    text: '',
                    title: 'Insert image',
                    icon: 'mce-ico mce-i-image',
                    onclick: function () {
                        popuptype = "editor";
                        $("#MediaPopup").modal('show');
                    }
                });
            }
        });
    </script>
}
<div class="main-content">
    <div class="container-fluid padded">
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-error">
                <button class="close" data-dismiss="alert" type="button">
                    ×
                </button>
                @TempData["ErrorMessage"]
            </div>
        }
        <div class="row-fluid">
            <div class="span12">
                <div class="box">
                    <div class="box-header">
                        <span class="title"><i class="icon-book"></i>&nbsp; New Post</span> @*<ul class="box-toolbar">
                                <li>
                                    <a href="@Url.Action("List", "Post")" title="Back to list" ><i class="icon-reply" style="margin-top: 10px"></i></a>
                                </li>
                            </ul>*@
                    </div>
                    <div class="box-content">
                        <div class="padded">
                            <div class="span12">
                                @using (Html.BeginForm("Add", "Post", FormMethod.Post, new { id = "frm1" }))
                                {
                                    <div class="span9">
                                        <div class="control-group">
                                            <div class="controls">
                                                <input type="hidden" id="hdnIsPost" name="hdnIsPost" />
                                                @Html.TextBoxFor(mbox => mbox.Title, new { placeholder = "Post Title", @class = "width100per", style = "margin-bottom: 0px;" })
                                                <div style="color: red">
                                                    @Html.ValidationMessageFor(m => m.Title)
                                                </div>
                                                @*<input id="txtPostTitle" type="text" placeholder="Post Title" class="width100per" style="margin-bottom: 0px;" />*@
                                                <div>
                                                    <div id="slug-container">
                                                        <strong>Permalink:</strong>
                                                        <span>
                                                            /
                                                            <span class="editable-container">
                                                                <span id="editable-slug"></span>
                                                                <input type="text" value="" id="edit-slug-text" style="display: none;" />
                                                            </span>
                                                        </span>&lrm;
                                                        <span class="slug-buttons">
                                                            <a id="edit-slug" class="button-small"
                                                               href="#">Edit</a>
                                                            <a id="save-slug" class="button-small" href="#" style="display: none;">OK</a>
                                                            <a href="#" id="cancel-slug" class="cancel" style="display: none;">Cancel</a>
                                                        </span>
                                                        @Html.HiddenFor(m => m.URL)
                                                        @Html.CheckBoxFor(m => m.IsSlugEdited, new { style = "display:none;" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="control-group">
                                            <div class="controls">
                                                <label>
                                                    <b>Post: </b>
                                                </label>
                                                <div>
                                                    @Html.TextAreaFor(m => m.Description, new { @class = "edtr", style = "width: 100%; max-width: 98%; height:500px; margin: 0px; overflow: hidden; word-wrap: break-word;resize:vertical;" })
                                                    @*@class = "textarea-html5", *@
                                                    <div style="color: red">
                                                        @Html.ValidationMessageFor(m => m.Description)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span3">
                                        <div class="padded" style="padding-top: 0px; padding-left: 0px;">
                                            @if (UserRights.HasRights(Rights.PublishOwnPosts))
                                            {
                                                <input type="button" class="btn btn-small btn-green" id="btnPost" style="text-align: right"
                                                       value="Publish" />
                                            }&nbsp;
                                            <input type="button" class="btn btn-small btn-blue" style="text-align: right" value="Save to Draft"
                                                   id="btnSaveToDraft" />&nbsp;
                                            <input type="button" class="btn btn-small btn-red" style="text-align: right" value="Back"
                                                   onclick="window.location = '/Admin/Post/List';" />
                                        </div>
                                        <div class="box">
                                            <div class="box-header">
                                                <span class="title">Labels</span>
                                            </div>
                                            <div class="box-content">
                                                <div class="padded">
                                                    @Html.DropDownList("LabelId", (IEnumerable<SelectListItem>)ViewBag.Labellist, new { @class = "select2-container select2-container-multi chzn-select", multiple = "multiple", id = "ddlLabels" })
                                                    <input id="txtNewLabel" name="txtNewLabel" type="text" maxlength="40" placeholder="New Label" style="margin-bottom: 0px;
                                                        width: 84% !important;" />
                                                    &nbsp;
                                                    <button title="Add New Label" id="btnAddLabel" style="border: 0">
                                                        <i class="icon-plus-sign" style="font-size: 20px"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="box">
                                            <div class="box-header">
                                                <span class="title">Categories</span>
                                            </div>
                                            <div class="box-content">
                                                <div class="padded">
                                                    <select name="CategoryId" id="CategoryId" multiple="multiple" data-val-required="Please select category"
                                                            data-val="true" class="select2-container select2-container-multi chzn-select">
                                                        @foreach (SelectListItem item in (IEnumerable<SelectListItem>)ViewBag.Categorylist)
                                                        {
                                                            <option value="@item.Value" selected="@item.Selected">@item.Text</option>
                                                        }
                                                    </select>
                                                    <div style="color: red">
                                                        <span data-valmsg-replace="true" data-valmsg-for="CategoryId" class="field-validation-valid">
                                                        </span>
                                                    </div>
                                                    <input id="txtNewCategory" name="txtNewCategory" type="text" maxlength="40" placeholder="New Category" style="margin-bottom: 0px;
                                                        width: 84% !important;" />&nbsp;
                                                    <button title="Add New Category" id="btnAddCategory" style="border: 0">
                                                        <i class="icon-plus-sign" style="font-size: 20px"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="box">
                                            <div class="box-header">
                                                <span class="title">Meta</span>
                                            </div>
                                            <div class="box-content">
                                                <div class="padded">
                                                    @*<textarea class="tags" placeholder="Meta with comma separated"></textarea>*@
                                                    <input type="text" id="txtMetaKeyword" name="txtMetaKeyword" placeholder="Keyword"
                                                           class="width100per" />
                                                    <input type="text" id="txtMetaDescription" name="txtMetaDescription" placeholder="Description"
                                                           class="width100per" />
                                                    <input type="text" id="txtMetaAuthor" name="txtMetaAuthor" placeholder="Author Name"
                                                           class="width100per" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="box">
                                            <div class="box-header">
                                                <span class="title">Comment Setting</span>
                                            </div>
                                            <div class="box-content">
                                                <div class="padded">
                                                    <div class="control-label">
                                                        @Html.CheckBoxFor(m => m.EnableComment, new { style = "float:left;margin-top:4px;" })
                                                        <label for="EnableComment" style="margin-left:20px;">Comment Enabled ?</label>
                                                        <label for="ddlEnableTill">Enable Comment Till </label>
                                                        @Html.DropDownListFor(m => m.CommentEnabledTill,
                                                            new List<SelectListItem>() {
                                                                new SelectListItem { Text = "15 Days", Value = "15"},
                                                                new SelectListItem { Text = "1 Month", Value = "30" },
                                                                new SelectListItem { Text = "6 Months", Value = "180" },
                                                                new SelectListItem { Text = "Always", Value = "36000" }
                                                            }, new { disabled = true })

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="box">
                                            <div class="box-header">
                                                <span class="title">Cover Content</span>
                                            </div>
                                            <div class="box-content">
                                                <div class="padded" style="text-align: left; vertical-align: top">
                                                    <label>
                                                        <b>Content: </b>
                                                    </label>
                                                    @Html.TextAreaFor(m => m.CoverContent, new { style = "height:100px;" })
                                                    <label style="display:inline;">
                                                        <b>Image: </b>
                                                    </label>
                                                    @Html.HiddenFor(m => m.FeaturedImage)
                                                    <input type="button" id="btnBImage" class="btn btn-small btn-blue" style="text-align: right" value="Select" />
                                                    <input type="button" id="btnBRemove" class="btn btn-small btn-red" style="text-align: right" value="Remove" />
                                                    @if (Model != null)
                                                    {
                                                        <img id="uploadedImage" style="height: 100px;max-width: 100px;margin-top:10px;" src="@Model.FeaturedImage" />
                                                    }
                                                    else
                                                    {
                                                        <img id="uploadedImage" style="height: 100px;max-width: 100px;margin-top:10px;" />
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="box">
                                            <div class="box-header">
                                                <span class="title">Display Order</span>
                                            </div>
                                            <div class="box-content">
                                                <div class="padded" style="text-align:left;vertical-align:top">
                                                    @Html.TextBoxFor(mbox => mbox.ContentOrder, new { @value = "0", placeholder = "Content Order To Display", style = "margin-bottom: 0px;" })
                                                    <div style="color: red">
                                                        @Html.ValidationMessageFor(m => m.ContentOrder)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div> 
                                }
                            </div>
                            &nbsp;
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@{Html.RenderAction("GetMedia", "Media", new { isEditor = true });}

@section BottomScript{
    <script type="text/javascript">
        $(document).ready(function () {

            $("#Title").on("input", function () {
                var currText = $("#Title").val();
                var replacedText = currText.toLowerCase().replace(/ /g, '-').replace(/[^\w-]+/g, '');
                $("#editable-slug").html(replacedText);
                $("#edit-slug-text").val(replacedText);
                $("#URL").val(replacedText);
            });
            $("#edit-slug").click(function () {
                $("#editable-slug").css("display", "none");
                $("#edit-slug-text").css("display", "");
                $("#edit-slug").css("display", "none");
                $("#save-slug").css("display", "");
                $("#cancel-slug").css("display", "");
            });
            $("#cancel-slug").click(function () {
                $("#edit-slug-text").val($("#editable-slug").html());
                $("#editable-slug").css("display", "");
                $("#edit-slug-text").css("display", "none");
                $("#edit-slug").css("display", "");
                $("#save-slug").css("display", "none");
                $("#cancel-slug").css("display", "none");
            });
            $("#save-slug").click(function () {
                $("#URL").val($("#edit-slug-text").val().trim());
                $("#editable-slug").css("display", "");
                $("#editable-slug").html($("#edit-slug-text").val().trim());
                $("#edit-slug-text").css("display", "none");
                $("#edit-slug").css("display", "");
                $("#save-slug").css("display", "none");
                $("#cancel-slug").css("display", "none");
            });
            $("#EnableComment").on("change", function () {
                if ($(this).is(":checked"))
                    $("#CommentEnabledTill").attr("disabled", false);
                else
                    $("#CommentEnabledTill").attr("disabled", true);
            });
            $("#btnAddLabel").click(function () {

                if ($.trim($("#txtNewLabel").val()).length > 0) {
                    if (ValidateRegex($("#txtNewLabel").val())) {
                        var currLabel = $.trim($("#txtNewLabel").val());
                        $.ajax({
                            type: "POST",
                            url: '/Admin/Post/AddLabel',
                            data: { labelName: currLabel },
                            dataType: "json",
                            success: function (data) {
                                if (data != false) {
                                    $("#ddlLabels").append("<option value=\"" + data + "\" selected=\"true\">" + currLabel + "</option>");
                                    $("#ddlLabels").trigger('change');
                                    $("#txtNewLabel").val("");
                                }
                                else {
                                    $("#ddlLabels option").each(function () {
                                        if ($(this).text().toLowerCase() == currLabel.toLowerCase()) {
                                            $(this).attr('selected', 'selected');
                                        }
                                    });
                                    $("#ddlLabels").trigger('change');
                                    $("#txtNewLabel").val("");
                                }
                            }
                            //error: function (data) { alert(data); }
                        });
                        //$("#ddlLabels").val(["Facebook", "Orkut", "Pinterest"]).trigger('change');
                    }
                    else {
                        alert("Only alpha numeric and special characters like '_ , . , # , & , * , + , - '  are allowed");
                    }
                }
                else {
                    $("#txtNewLabel").val("");
                    alert("Please enter label text");
                }

                return false;
            });
            $("#btnAddCategory").click(function () {

                if ($.trim($("#txtNewCategory").val()).length > 0) {
                    if (ValidateRegex($("#txtNewCategory").val())) {
                        var currCat = $.trim($("#txtNewCategory").val());
                        $.ajax({
                            type: "POST",
                            url: '/Admin/Post/AddCategory',
                            data: { CategoryName: currCat },
                            dataType: "json",
                            success: function (data) {
                                if (data != false) {
                                    $("#CategoryId").append("<option value=\"" + data + "\" selected=\"true\">" + currCat + "</option>");
                                    $("#CategoryId").trigger('change');
                                    $("#txtNewCategory").val("");
                                }
                                else {
                                    $("#CategoryId option").each(function () {
                                        if ($(this).text().toLowerCase() == currCat.toLowerCase()) {
                                            $(this).attr('selected', 'selected');
                                        }
                                    });
                                    $("#CategoryId").trigger('change');
                                    $("#txtNewCategory").val("");
                                }
                            }
                            //error: function (data) { alert(data); }
                        });
                        //$("#ddlLabels").val(["Facebook", "Orkut", "Pinterest"]).trigger('change');
                    }
                    else {
                        alert("Only alpha numeric and special characters like '_ , . , # , & , * , + , - '  are allowed");
                    }
                }
                else {
                    $("#txtNewCategory").val("");
                    alert("Please enter category name");
                }

                return false;
            });

            $('#btnPost').click(function () {
                $("#hdnIsPost").val("Post");
                tinyMCE.triggerSave();
                checkCategory();
            });

            $('#btnSaveToDraft').click(function () {
                $("#hdnIsPost").val("SaveToDraft");
                tinyMCE.triggerSave();
                checkCategory();
            });
            function checkCategory() {
                if ($("#frm1").valid()) {
                    $('#frm1').submit();
                }
            }
            $('#btnBRemove').click(function () {
                $('#FeaturedImage').val("");
                $('#uploadedImage').attr("src", "");
            });

            $('#btnBImage').click(function (e) {
                e.preventDefault();
                popuptype = "cover";
                $('#MediaPopup').modal("show");
            });
            $("body").delegate(".wizard-input-section .media-thumb .imgSelect", "click", function () {
                var imgPath = $(this).attr('src');
                if (popuptype == "cover") {
                    $('#FeaturedImage').val(imgPath);
                    $('#uploadedImage').attr("src", imgPath);
                }
                else {   //editor
                    var url = imgPath;
                    var img = "<img src=\"" + url + "\"/>";
                    tinyMCE.activeEditor.execCommand('mceInsertContent', false, img);
                }
                $("#MediaPopup").modal("hide");
            });
        });
    </script>
}
