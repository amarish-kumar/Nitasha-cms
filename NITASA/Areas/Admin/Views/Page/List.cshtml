@model List<NITASA.Data.Content>
@{
    ViewBag.Title = "Pages";

    WebGrid grid = new WebGrid(Model, rowsPerPage: 10, canSort: true);
}
    <style>
        tfoot td {
            line-height: 3 !important;
        }

        .custom-pagination td {
            padding-left: 10px !important;
        }

        .table-normal tbody td.col2 {
            width: 50px;
            text-align: center;
        }

        .table-normal tbody td.col3 {
            width: 115px;
            text-align: center;
        }

        .table-normal tbody td.col4 {
            width: 80px;
            text-align: center;
        }
    </style>
    <div class="main-content">
        <div class="container-fluid padded">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    <button class="close" data-dismiss="alert" type="button">×</button>
                    @TempData["SuccessMessage"]
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-error">
                    <button class="close" data-dismiss="alert" type="button">×</button>
                    @TempData["ErrorMessage"]
                </div>
            }
            <div class="row-fluid">
                <div class="box">
                    <div class="box-header">
                        <span class="title">Browse Page</span>
                        <ul class="box-toolbar">
                            <li><a href="@Url.Action("Add")" title="Add Page"><i class="icon-plus-sign" style="margin-top: 10px"></i></a></li>
                        </ul>
                    </div>
                    <div class="box-content">
                        @if (Model.Count() > 0)
                        {
                            @grid.GetHtml(tableStyle: "table table-normal", headerStyle: "head", alternatingRowStyle: "alt", firstText: "First", nextText: "Next", previousText: "Prev", lastText: "Last", footerStyle: "custom-pagination",
                            mode: WebGridPagerModes.All,
                            columns: grid.Columns(
                                        grid.Column(columnName: "Title", header: "Page Title", style: "col1"),
                                                  grid.Column(columnName: "ContentView", header: "Views", style: "col2"),
                                                       grid.Column(columnName: "User.FullName", header: "Author", style: "col2"),
                                        grid.Column(columnName: "isPublished", header: "Type", style: "col2",
                                                format: (item) => item.isPublished == true ? "Published" : "Draft"
                                        ),
                                        grid.Column(header: "Action", style: "col3", format: @<text>
                                            @Html.ActionLink("Edit", "Add", "Page", new { guid = item.GUID }, new { @class = "btn btn-small btn-blue" })
                                            @Html.ActionLink("Delete", "Delete", "Page", new { guid = item.GUID }, new { @class = "btn btn-small btn-red", onclick = "return confirm('Are you sure to delete this Page ?');" })
                                        </text>
                                                                     )
                                                         )
                                                     )
                        }
                        else
                        {
                            <div class="padded">No Page Found.</div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
