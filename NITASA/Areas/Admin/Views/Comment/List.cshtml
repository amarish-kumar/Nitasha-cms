@model List<Comment>
    @using NITASA.Data
    @{
        ViewBag.Title = "Comments";

        WebGrid grid = new WebGrid(rowsPerPage: 20, canSort: true);
        grid.Bind(Model, autoSortAndPage: false, rowCount: ViewBag.TotalRows);
    }
    <style>
        tfoot td {
            line-height: 3 !important;
        }

        .custom-pagination td {
            padding-left: 10px !important;
        }

        .table-normal tbody td.col1 {
            width: 100px;
            text-align: center;
        }

        .table-normal tbody td.col2 {
            width: 100px;
            text-align: center;
        }

        .table-normal tbody td.col3 {
            width: 115px;
            text-align: center;
        }
    </style>
    <div class="main-content">
        <div class="container-fluid padded">
            <div class="row-fluid">
                <div class="span12">
                    <div class="box">
                        <div class="box-header">
                            <ul class="nav nav-tabs nav-tabs-left">
                                <li class="active"><a href="@Url.Action("List", "Comment")">All Comments</a></li>
                                <li><a href="@Url.Action("Abusive", "Comment")">Abusive Comments</a></li>
                            </ul>
                        </div>
                        <div class="box-content padded">
                            <div class="tab-content">
                                <div class="tab-pane active">
                                    <div class="row-fluid">
                                        <div class="span12">
                                            @if (Model.Count() > 0)
                                            {
                                                <div class="box">
                                                    <div class="box-content">
                                                        @grid.GetHtml(tableStyle: "table table-normal", headerStyle: "head", alternatingRowStyle: "alt",
                                firstText: "First", nextText: "Next", previousText: "Prev", lastText: "Last", footerStyle: "custom-pagination",
                                mode: WebGridPagerModes.All, columns: grid.Columns(
                                             grid.Column(columnName: "UserName", header: "Name", style: "col0"),
                                             grid.Column(columnName: "Description", canSort: false, header: "Comment", style: "col0"),
                                                            grid.Column(columnName: "Content.Title", header: "Post/Page", style: "col0"),
                                                          grid.Column(columnName: "AddedOn", header: "Commented On", style: "col1", format: (item) => item.AddedOn.ToString("MMM d, h:mm tt")),
                                                  grid.Column(columnName: "IsModerated", header: "Display", style: "col2",
                                                       format: (item) => new MvcHtmlString("<input type=\"checkbox\" class =\"iButton-icons\" data-id=\"" + item.CommentID + "\" " + (item.IsModerated == true ? "checked=checked" : "") + " />"))
                                        )
                                    )
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="padded">
                                                    No Comments Found.
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        $(document).ready(function () {
            $(".iButton-icons").iButton(
            {
                labelOn: '<i class="icon-ok"></i>',
                labelOff: '<label><i class="icon-remove"></i></label>',
                change: function ($input) {
                    $.ajax({
                        url: "@Url.Action("ChangeStatus", "Comment")",
                        data: { id: $($input).attr("data-id"), status: $($input).prop('checked') }
                    });
                }
            });
        });
    </script>
